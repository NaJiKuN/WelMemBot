# G1.3

import logging
from telegram import Update, Bot
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters
import uuid # ูุชูููุฏ ุฃููุงุฏ ูุฑูุฏุฉ
from datetime import datetime, timedelta # ูุฅุฏุงุฑุฉ ุตูุงุญูุฉ ุงูุนุถููุฉ (ุงุฎุชูุงุฑู)
import os # ูุฅุฏุงุฑุฉ ูุณุงุฑ ุงููููุงุช

# 1. ุฅุนุฏุงุฏุงุช ุงูุจูุช ูุงูููุฌ
# ุชููุฆุฉ ูุธุงู ุงูุชุณุฌูู (logging) ูุชุชุจุน ูุง ูุญุฏุซ ูู ุงูุจูุช
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)
logger = logging.getLogger(__name__)

# ุจูุงูุงุช ุงูุจูุช ููุง ุชู ุชูููุฑูุง
TOKEN = "8034775321:AAHVwntCuBOwDh3NKIPxcs-jGJ9mGq4o0_0"
ADMIN_ID = 764559466 # ูุนุฑู ุงููุดุฑู (ุงููุณุคูู)

# ูุณุงุฑ ูุฌูุฏ ุงูุจูุช ุนูู AWS EC2
BOT_DIR = "/home/ec2-user/projects/WelMemBot"
# ุงูุชุฃูุฏ ูู ูุฌูุฏ ูุฌูุฏ ุงูุจูุชุ ูุฅู ูู ููู ููุฌูุฏูุง ูุณูุชู ุฅูุดุงุคู
os.makedirs(BOT_DIR, exist_ok=True)

# ููู ูุญูุธ ุงูุฃููุงุฏ ุงููููุฏุฉ. ุณูุชู ุญูุธู ูู ููุณ ูุณุงุฑ ุงูุจูุช
CODES_FILE = os.path.join(BOT_DIR, "codes.txt")

# ูุงููุณ ูุชุฎุฒูู ุงูุฃููุงุฏ ุงููููุฏุฉ. ุงูููุชุงุญ ูู ุงูููุฏุ ูุงููููุฉ ูู ูุนุฑู ุงููุฌููุนุฉ (GROUP_ID)
# ูุซุงู: {'abcde123': '-1002329495586', 'fghij456': '-1001234567890'}
generated_codes = {}

# ุชุญููู ุงูุฃููุงุฏ ุงูููุฌูุฏุฉ ูู ุงูููู ุนูุฏ ุจุฏุก ุชุดุบูู ุงูุจูุช
def load_codes():
    if os.path.exists(CODES_FILE):
        with open(CODES_FILE, 'r') as f:
            for line in f:
                if ':' in line:
                    code, group_id = line.strip().split(':', 1)
                    generated_codes[code] = group_id
        logger.info(f"ุชู ุชุญููู {len(generated_codes)} ููุฏ ูู ููู ุงูุฃููุงุฏ.")
    else:
        logger.info("ููู ุงูุฃููุงุฏ ุบูุฑ ููุฌูุฏ. ุณูุชู ุฅูุดุงุก ููู ุฌุฏูุฏ ุนูุฏ ุฃูู ุชูููุฏ.")

# ุญูุธ ุงูุฃููุงุฏ ูู ุงูููู
def save_codes():
    with open(CODES_FILE, 'w') as f:
        for code, group_id in generated_codes.items():
            f.write(f"{code}:{group_id}\n")
    logger.info(f"ุชู ุญูุธ {len(generated_codes)} ููุฏ ูู ููู ุงูุฃููุงุฏ.")

# 2. ูุธุงุฆู ุงูุฃูุงูุฑ (Command Handlers)

# ุฏุงูุฉ ุจุฏุก ุงูุจูุช /start
def start(update: Update, context):
    user = update.effective_user
    logger.info(f"ุงููุณุชุฎุฏู {user.id} ุจุฏุฃ ุงูุจูุช.")
    # ุงูุชุญูู ููุง ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ูู ุงููุณุคูู (Admin)
    if user.id == ADMIN_ID:
        update.message.reply_text(
            f"ูุฑุญุจุงู ุจู ูุง ูุดุฑู! ๐\n"
            "ููููู ุงุณุชุฎุฏุงู ุงูุฃูุงูุฑ ุงูุชุงููุฉ:\n"
            "/generate_codes - ูุชูููุฏ ุฃููุงุฏ ุฏุนูุฉ ุฌุฏูุฏุฉ.\n"
            "**ููุงุญุธุฉ:** ุณูุชู ุญูุธ ุงูุฃููุงุฏ ูู ููู `codes.txt` ุชููุงุฆูุงู.\n\n"
            "**ูููุณุชุฎุฏููู ุงูุนุงุฏููู:**\n"
            "ุฃุฏุฎู ุงูููุฏ ุงูุฐู ุญุตูุช ุนููู ููุงูุถูุงู ุฅูู ุงููุฌููุนุฉ."
        )
    else:
        update.message.reply_text(
            f"ูุฑุญุจุงู ุจู ูุง {user.first_name}! ๐\n"
            "ูุฑุฌู ุฅุฏุฎุงู ููุฏ ุงูุฏุนูุฉ ููุงูุถูุงู ุฅูู ุงููุฌููุนุฉ ุงูุฎุงุตุฉ."
        )

# ุฏุงูุฉ ูุชูููุฏ ุงูุฃููุงุฏ /generate_codes (ุฎุงุตุฉ ุจุงููุณุคูู)
def generate_codes_command(update: Update, context):
    user = update.effective_user
    # ุงูุชุฃูุฏ ูู ุฃู ุงููุณุชุฎุฏู ุงูุฐู ูุตุฏุฑ ุงูุฃูุฑ ูู ุงููุณุคูู
    if user.id != ADMIN_ID:
        update.message.reply_text("ุนุฐุฑุงูุ ูุฐุง ุงูุฃูุฑ ูุฎุตุต ูููุดุฑููู ููุท.")
        return

    logger.info(f"ุงููุดุฑู {user.id} ุทูุจ ุชูููุฏ ุฃููุงุฏ.")
    # ุชูุฌูู ุงููุดุฑู ูุฅุฏุฎุงู ID ุงููุฌููุนุฉ ูุนุฏุฏ ุงูุฃููุงุฏ
    update.message.reply_text(
        "ูู ูุถููุ ุฃุฑุณู ูู ูุนุฑู ุงููุฌููุนุฉ (Group ID) ูุนุฏุฏ ุงูุฃููุงุฏ ุงูุชู ุชุฑุบุจ ูู ุชูููุฏูุง.\n"
        "ูุซุงู: `-1002329495586 5` (ูุชูููุฏ 5 ุฃููุงุฏ ูููุฌููุนุฉ ุฐุงุช ุงููุนุฑู -1002329495586)."
    )
    # ุชุนููู ุญุงูุฉ ูููุญุงุฏุซุฉ ูุชููุน ุงูุฑุฏ ุงูุชุงูู ูู ุงููุดุฑู
    context.user_data['awaiting_group_id_and_count'] = True

# ุฏุงูุฉ ููุนุงูุฌุฉ ุฑุณุงุฆู ุงููุต ุงูุนุงุฏู (ูุฅุฏุฎุงู ุงูุฃููุงุฏ ุฃู ุฅุฏุฎุงู ID ุงููุฌููุนุฉ ูุนุฏุฏ ุงูุฃููุงุฏ)
def handle_message(update: Update, context):
    user = update.effective_user
    text = update.message.text

    # ุญุงูุฉ: ุงููุดุฑู ููุชุธุฑ ุฅุฏุฎุงู ID ุงููุฌููุนุฉ ูุนุฏุฏ ุงูุฃููุงุฏ
    if user.id == ADMIN_ID and context.user_data.get('awaiting_group_id_and_count'):
        try:
            parts = text.split()
            if len(parts) == 2:
                group_id = parts[0]
                num_codes = int(parts[1])

                if not group_id.startswith('-100'):
                    update.message.reply_text("ูุนุฑู ุงููุฌููุนุฉ ูุฌุจ ุฃู ูุจุฏุฃ ุจู '-100'. ูุฑุฌู ุงูุชุฃูุฏ ูู ุตุญุฉ ุงููุนุฑู.")
                    return
                if num_codes <= 0:
                    update.message.reply_text("ุนุฏุฏ ุงูุฃููุงุฏ ูุฌุจ ุฃู ูููู ุฃูุจุฑ ูู ุตูุฑ.")
                    return

                new_codes_output = "ุงูุฃููุงุฏ ุงููููุฏุฉ:\n"
                for _ in range(num_codes):
                    # ุชูููุฏ ููุฏ ูุฑูุฏ ุจุงุณุชุฎุฏุงู uuid4 ูุชุญูููู ุฅูู string ูุงุฎุชุตุงุฑ 8 ุฃุญุฑู
                    code = str(uuid.uuid4())[:8]
                    # ุงูุชุฃูุฏ ูู ุฃู ุงูููุฏ ูุฑูุฏ ูุจู ุฅุถุงูุชู
                    while code in generated_codes:
                        code = str(uuid.uuid4())[:8]
                    generated_codes[code] = group_id
                    new_codes_output += f"โข `{code}` (ูููุฌููุนุฉ {group_id})\n"
                
                save_codes() # ุญูุธ ุงูุฃููุงุฏ ุงูุฌุฏูุฏุฉ
                update.message.reply_text(new_codes_output, parse_mode='Markdown')
                logger.info(f"ุงููุดุฑู {user.id} ูููุฏ {num_codes} ููุฏ ูููุฌููุนุฉ {group_id}.")
                del context.user_data['awaiting_group_id_and_count'] # ูุณุญ ุงูุญุงูุฉ
            else:
                update.message.reply_text("ุตูุบุฉ ุบูุฑ ุตุญูุญุฉ. ูุฑุฌู ุฅุฏุฎุงู ูุนุฑู ุงููุฌููุนุฉ ูุนุฏุฏ ุงูุฃููุงุฏ ููุตูููู ุจูุณุงูุฉ. ูุซุงู: `-1002329495586 5`")
        except ValueError:
            update.message.reply_text("ุตูุบุฉ ุบูุฑ ุตุญูุญุฉ. ูุฑุฌู ุงูุชุฃูุฏ ูู ุฃู ุนุฏุฏ ุงูุฃููุงุฏ ุฑูู ุตุญูุญ. ูุซุงู: `-1002329495586 5`")
        return

    # ุญุงูุฉ: ุงููุณุชุฎุฏู ุงูุนุงุฏู ูุฏุฎู ููุฏ ุงูุฏุนูุฉ
    entered_code = text.strip()
    logger.info(f"ุงููุณุชุฎุฏู {user.id} ุฃุฏุฎู ุงูููุฏ: {entered_code}")

    if entered_code in generated_codes:
        target_group_id = generated_codes[entered_code]
        try:
            # ูุญุงููุฉ ุฅุถุงูุฉ ุงููุณุชุฎุฏู ุฅูู ุงููุฌููุนุฉ
            # ูุชุทูุจ ุงูุจูุช ุตูุงุญูุฉ "ุฅุถุงูุฉ ุฃุนุถุงุก" ูู ุงููุฌููุนุฉ ุงููุณุชูุฏูุฉ
            bot = context.bot
            bot.unban_chat_member(chat_id=target_group_id, user_id=user.id)
            
            # ุฑุณุงูุฉ ูุฌุงุญ ูููุณุชุฎุฏู
            update.message.reply_text(
                "ุชูุช ุฅุถุงูุชู ุฅูู ุงููุฌููุนุฉ ุจูุฌุงุญ! ๐"
            )
            logger.info(f"ุชูุช ุฅุถุงูุฉ ุงููุณุชุฎุฏู {user.first_name} ({user.id}) ุฅูู ุงููุฌููุนุฉ {target_group_id} ุจูุฌุงุญ.")

            # ุฑุณุงูุฉ ุชุฑุญูุจ ูู ุงููุฌููุนุฉ
            # ุฑุณุงูุฉ ุงูุชุฑุญูุจ: "ุฃููุงู ูุณููุงู ุจูุ {ุงุณู ุงููุณุชุฎุฏู}! ุณูุชู ุฅููุงุก ุนุถููุชู ุจุนุฏ ุดูุฑ ุชููุงุฆููุง. ููุฑุฌู ุงูุงูุชุฒุงู ุจุขุฏุงุจ ุงููุฌููุนุฉ ูุชุฌูุจ ุงููุบุงุฏุฑุฉ ูุจู ุงููุฏุฉ ุงููุญุฏุฏุฉุ ูุชุฌูุจ ุฅููุงู ุงูุนุถููุฉ."
            welcome_message = (
                f"Welcome, {user.first_name}!\n"
                "Your membership will automatically end after one month.\n"
                "Please adhere to the group's etiquette and avoid leaving before the specified period to prevent membership termination."
            )
            bot.send_message(chat_id=target_group_id, text=welcome_message)
            logger.info(f"ุชู ุฅุฑุณุงู ุฑุณุงูุฉ ุชุฑุญูุจ ูููุณุชุฎุฏู {user.first_name} ูู ุงููุฌููุนุฉ {target_group_id}.")

            # ุญุฐู ุงูููุฏ ุจุนุฏ ุงุณุชุฎุฏุงูู ููููู ุตุงูุญูุง ููุฑุฉ ูุงุญุฏุฉ
            del generated_codes[entered_code]
            save_codes() # ุญูุธ ุงูุชุบููุฑุงุช ูู ููู ุงูุฃููุงุฏ
            logger.info(f"ุชู ุญุฐู ุงูููุฏ {entered_code} ุจุนุฏ ุงูุงุณุชุฎุฏุงู.")

        except Exception as e:
            logger.error(f"ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุฅุถุงูุฉ ุงููุณุชุฎุฏู {user.id} ุฅูู ุงููุฌููุนุฉ {target_group_id}: {e}")
            update.message.reply_text(
                "ุนุฐุฑุงูุ ูู ุฃุชููู ูู ุฅุถุงูุชู ุฅูู ุงููุฌููุนุฉ. ูุฏ ุฃููู ูุง ุฃููู ุงูุตูุงุญูุงุช ุงููุงููุฉุ ุฃู ุฃูู ูุญุธูุฑ ูู ุงููุฌููุนุฉ. ูุฑุฌู ุงูุชูุงุตู ูุน ุงููุณุคูู."
            )
    else:
        # ุฑุณุงูุฉ ุงูุฎุทุฃ ุฅุฐุง ูุงู ุงูููุฏ ุบูุฑ ุตุญูุญ
        update.message.reply_text("The entered code is incorrect. Please try to enter the code correctly.")
        logger.warning(f"ุงููุณุชุฎุฏู {user.id} ุฃุฏุฎู ููุฏูุง ุฎุงุทุฆูุง: {entered_code}")

# ุฏุงูุฉ ููุนุงูุฌุฉ ุงูุฃุฎุทุงุก
def error(update: Update, context):
    logger.warning(f"ุชุญุฏูุซ '{update}' ุณุจุจ ุงูุฎุทุฃ '{context.error}'")

# 3. ุฏุงูุฉ main ูุชุดุบูู ุงูุจูุช
def main():
    # ุชุญููู ุงูุฃููุงุฏ ุนูุฏ ุจุฏุก ุชุดุบูู ุงูุจูุช
    load_codes()

    # ุฅูุดุงุก Updater ูุชูุฑูุฑ ุงูุชููู ุงูุฎุงุต ุจุงูุจูุช
    updater = Updater(TOKEN, use_context=True)

    # ุงูุญุตูู ุนูู dispatcher ูุชุณุฌูู ุงููุนุงูุฌุงุช
    dp = updater.dispatcher

    # ุชุณุฌูู ูุนุงูุฌุงุช ุงูุฃูุงูุฑ
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("generate_codes", generate_codes_command))

    # ุชุณุฌูู ูุนุงูุฌ ุงูุฑุณุงุฆู ุงููุตูุฉ
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))

    # ุชุณุฌูู ูุนุงูุฌ ุงูุฃุฎุทุงุก
    dp.add_handler(dp.add_error_handler(error))

    # ุจุฏุก ุชุดุบูู ุงูุจูุช
    updater.start_polling()

    # ุฅุจูุงุก ุงูุจูุช ููุฏ ุงูุชุดุบูู ุญุชู ูุชู ุงูุถุบุท ุนูู Ctrl+C
    updater.idle()

if __name__ == '__main__':
    main()
